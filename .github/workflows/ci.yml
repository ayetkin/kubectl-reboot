name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: golang:1.24
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run all checks (vet, fmt, test)
      run: make check
      env:
        GOFLAGS: "-buildvcs=false"

  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: golang:1.24
    needs: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Build for current platform
      run: make build
      env:
        GOFLAGS: "-buildvcs=false"
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: kubectl-reboot-binary
        path: bin/kubectl-reboot
        retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    container:
      image: golang:1.24
    permissions:
      security-events: write
      contents: read
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Run Security Checks
      run: |
        # Check for known vulnerabilities in dependencies
        go list -json -m all | grep -E "(Path|Version)" || true
        
        # Run go mod verify to check module integrity
        go mod verify
      continue-on-error: true
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: Download dependencies
      run: go mod download
      env:
        GOFLAGS: "-buildvcs=false"
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.64.8
        args: --timeout=5m
      env:
        CGO_ENABLED: "0"
        GOFLAGS: "-buildvcs=false"
